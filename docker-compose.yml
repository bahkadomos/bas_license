services:
  db:
    image: postgres:17-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus/

  promtail:
    image: grafana/promtail:2.9.11
    volumes:
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml

  loki:
    image: grafana/loki:3.3.1
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/config.yml
      - loki-data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yml

  grafana:
    image: grafana/grafana-enterprise:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/dashboard.json"
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    volumes:
      - ./monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./monitoring/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./monitoring/grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
      - grafana-data:/var/lib/grafana/

  web:
    build: .
    restart: on-failure
    command: sh -c "make migrations && make start HOST=0.0.0.0 PORT=8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      POSTGRES_HOST: "db"
    depends_on:
      - db
      - prometheus

volumes:
  db-data:
  prometheus-data:
  loki-data:
  grafana-data:
